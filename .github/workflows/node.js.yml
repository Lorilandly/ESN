# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: sb2-project
          POSTGRES_USER: ${{ secrets.POSTGRES_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci
    
    - name: Create .env file
      run: | 
        echo POSTGRES_DB_USER=${{ secrets.POSTGRES_DB_USER }} >> .env
        echo POSTGRES_DB_PASSWORD=${{ secrets.POSTGRES_DB_PASSWORD }} >> .env

    - name: Run unit tests
      env:
        SECRET_KEY: ${{ secrets.JWT_SECRET }}
      run: npm test

    - name: Deploy
      if: github.ref == 'refs/head/main'
      env:
        deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
      run: curl "$deploy_url"
